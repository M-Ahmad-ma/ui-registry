{
  "name": "My UI Registry",
  "version": "1.0.0",
  "blocks": [
    {
      "id": "hero-threejs",
      "title": "Hero Section 3D",
      "description": "Hero section with Three.js, shaders, and floating particles",
      "code": "function HeroSection() {\n  const { useRef, useMemo } = React;\n  const { Canvas, useFrame } = ReactThreeFiber;\n  const { OrbitControls, Environment } = Drei;\n\n  const vertexShader = `\nuniform float uTime;\nuniform vec2 uMouse;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvoid main() {\n  vUv = uv;\n  vPosition = position;\n  vec3 pos = position;\n  float wave = sin(pos.x * 2.0 + uTime) * cos(pos.y * 2.0 + uTime) * 0.1;\n  float mouseInfluence = length(uMouse - pos.xy) * 0.5;\n  pos.z += wave + sin(mouseInfluence + uTime) * 0.05;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n}`;\n\n  const fragmentShader = `\nuniform float uTime;\nuniform vec2 uMouse;\nuniform vec3 uColor1;\nuniform vec3 uColor2;\nuniform vec3 uColor3;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvoid main() {\n  vec2 uv = vUv;\n  float gradient1 = sin(uv.x * 3.0 + uTime * 0.5) * cos(uv.y * 3.0 + uTime * 0.3);\n  float gradient2 = sin(uv.x * 5.0 - uTime * 0.7) * cos(uv.y * 2.0 + uTime * 0.4);\n  vec2 mouseUv = uMouse * 0.5 + 0.5;\n  float mouseDistance = distance(uv, mouseUv);\n  float mouseEffect = 1.0 - smoothstep(0.0, 0.5, mouseDistance);\n  float mixFactor = (gradient1 + gradient2) * 0.5 + 0.5 + mouseEffect * 0.3;\n  vec3 color = mix(uColor1, uColor2, mixFactor);\n  color = mix(color, uColor3, sin(uTime * 0.5) * 0.5 + 0.5);\n  float noise = fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n  color += noise * 0.05;\n  gl_FragColor = vec4(color, 0.8);\n}`;\n\n  const CustomShaderMaterial = () => {\n    const materialRef = useRef();\n    const uniforms = useMemo(() => ({\n      uTime: { value: 0 },\n      uMouse: { value: [0,0] },\n      uColor1: { value: [0.082,0.502,0.239] },\n      uColor2: { value: [0.518,0.8,0.086] },\n      uColor3: { value: [0.941,1.0,0.957] },\n    }), []);\n\n    useFrame(state => {\n      if(materialRef.current){\n        materialRef.current.uniforms.uTime.value = state.clock.elapsedTime;\n        materialRef.current.uniforms.uMouse.value = [\n          (state.mouse.x * state.viewport.width)/2,\n          (state.mouse.y * state.viewport.height)/2\n        ];\n      }\n    });\n\n    return <shaderMaterial ref={materialRef} vertexShader={vertexShader} fragmentShader={fragmentShader} uniforms={uniforms} transparent />;\n  };\n\n  const AnimatedMesh = () => (\n    <mesh rotation={[0,0,0]} scale={[4,3,1]}>\n      <planeGeometry args={[2,2,32,32]} />\n      <CustomShaderMaterial />\n    </mesh>\n  );\n\n  const FloatingParticles = () => {\n    const particles = Array.from({ length: 50 }, (_,i) => (\n      <mesh key={i} position={[(Math.random()-0.5)*10,(Math.random()-0.5)*10,(Math.random()-0.5)*5]} scale={Math.random()*0.1+0.05}>\n        <sphereGeometry args={[1,8,8]} />\n        <meshBasicMaterial color=\"#84cc16\" transparent opacity={0.6} />\n      </mesh>\n    ));\n    return <group>{particles}</group>;\n  };\n\n  return (\n    <div className=\"relative w-full h-screen overflow-hidden\">\n      <div className=\"absolute inset-0 w-full h-screen\">\n        <Canvas camera={{ position:[0,0,5], fov:75 }} style={{ background:'transparent' }}>\n          <Environment preset=\"dawn\" />\n          <ambientLight intensity={0.5} />\n          <pointLight position={[10,10,10]} intensity={1} />\n          <AnimatedMesh />\n          <FloatingParticles />\n          <OrbitControls enableZoom={false} enablePan={false} enableRotate autoRotate autoRotateSpeed={0.5} />\n        </Canvas>\n      </div>\n      <div className=\"relative z-10 flex flex-col items-center justify-center min-h-screen text-center px-4\">\n        <h1 className=\"text-5xl md:text-7xl font-bold text-foreground leading-tight\">\n          Experience the <span className=\"bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent\">Future</span> of Web Technology\n        </h1>\n      </div>\n    </div>\n  );\n}\n export defaultHeroSection;",
      "tags": ["threejs", "shader", "hero"],
      "dependencies": [
        "@react-three/fiber",
        "three",
        "@react-three/drei",
        "framer-motion"
      ],
      "imports": [
        "import React from 'react';",
        "import { Canvas, useFrame } from '@react-three/fiber';",
        "import { OrbitControls, Environment } from '@react-three/drei';",
        "import { motion } from 'framer-motion';"
      ]
    },
    {
      "id": "hero-motion",
      "title": "Hero Motion",
      "description": "Framer Motion hero header",
      "code": "function HeroMotion() {\n  return (\n    <div className=\"relative overflow-hidden rounded-2xl p-10 bg-gradient-to-br from-indigo-600 to-fuchsia-600\">\n      <motion.h1 initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }} className=\"text-4xl font-bold\">\n        Motion Hero\n      </motion.h1>\n      <motion.p initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.2 }} className=\"mt-2 text-white/80\">\n        Smooth and GPU-accelerated.\n      </motion.p>\n    </div>\n  );\n}\nexport default HeroMotion",
      "tags": ["motion", "hero"],
      "dependencies": ["framer-motion"],
      "imports": [
        "import { motion } from 'framer-motion';",
        "import React from 'react';"
      ]
    },
    {
      "id": "pricing-simple",
      "title": "Pricing (Simple)",
      "description": "Clean pricing cards",
      "code": "function PricingSimple() {\n  return (\n    <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {[\"Basic\",\"Pro\",\"Team\"].map((tier, i) => (\n        <div key={tier} className=\"rounded-2xl p-6 bg-white/5 ring-1 ring-white/10\">\n          <div className=\"text-xl font-semibold\">{tier}</div>\n          <div className=\"mt-2 text-3xl font-bold\">{i * 9 + 9}<span className=\"text-base font-normal text-white/60\">/mo</span></div>\n          <button className=\"mt-4 w-full rounded-xl bg-white/10 hover:bg-white/20 py-2\">Choose</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n export default PricingSimple",
      "tags": ["pricing"],
      "dependencies": [],
      "imports": ["import React from 'react';"]
    },

{
  "id": "stunning-carousel",
  "title": "Stunning Carousel",
  "description": "Animated carousel with Framer Motion, images, and smooth transitions",
  "code": "\"use client\";\n\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nconst slides = [\n  {\n    id: 1,\n    title: \"Stunning Design\",\n    description: \"Experience the beauty of modern web design with smooth animations and elegant transitions.\",\n    image: \"/modern-abstract-geometric-design-with-purple-and-t.jpg\",\n    color: \"from-primary/20 to-accent/20\",\n  },\n  {\n    id: 2,\n    title: \"Smooth Animations\",\n    description: \"Powered by Framer Motion for buttery smooth transitions and delightful user interactions.\",\n    image: \"/flowing-liquid-motion-graphics-in-vibrant-colors.jpg\",\n    color: \"from-accent/20 to-secondary/20\",\n  },\n  {\n    id: 3,\n    title: \"Modern Interface\",\n    description: \"Clean, minimalist design that focuses on content while providing an exceptional user experience.\",\n    image: \"/minimalist-interface-design-with-clean-lines-and-m.jpg\",\n    color: \"from-secondary/20 to-primary/20\",\n  },\n  {\n    id: 4,\n    title: \"Responsive Design\",\n    description: \"Perfectly crafted to work seamlessly across all devices and screen sizes.\",\n    image: \"/responsive-design-showcase-with-multiple-device-mo.jpg\",\n    color: \"from-primary/30 to-accent/30\",\n  },\n];\n\nexport default function StunningCarousel() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [direction, setDirection] = useState(0);\n\n  const slideVariants = {\n    enter: (direction) => ({\n      x: direction > 0 ? 1000 : -1000,\n      opacity: 0,\n      scale: 0.8,\n    }),\n    center: { zIndex: 1, x: 0, opacity: 1, scale: 1 },\n    exit: (direction) => ({\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      opacity: 0,\n      scale: 0.8,\n    }),\n  };\n\n  const swipeConfidenceThreshold = 10000;\n  const swipePower = (offset, velocity) => Math.abs(offset) * velocity;\n\n  const paginate = (newDirection) => {\n    setDirection(newDirection);\n    setCurrentIndex((prevIndex) => {\n      if (newDirection === 1) {\n        return prevIndex === slides.length - 1 ? 0 : prevIndex + 1;\n      } else {\n        return prevIndex === 0 ? slides.length - 1 : prevIndex - 1;\n      }\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-6xl mx-auto\">\n        <div className=\"relative overflow-hidden rounded-2xl bg-card shadow-2xl border border-border\">\n          <div className=\"relative h-[500px] md:h-[600px]\">\n            <AnimatePresence initial={false} custom={direction}>\n              <motion.div\n                key={currentIndex}\n                custom={direction}\n                variants={slideVariants}\n                initial=\"enter\"\n                animate=\"center\"\n                exit=\"exit\"\n                transition={{\n                  x: { type: \"spring\", stiffness: 300, damping: 30 },\n                  opacity: { duration: 0.2 },\n                  scale: { duration: 0.4 },\n                }}\n                drag=\"x\"\n                dragConstraints={{ left: 0, right: 0 }}\n                dragElastic={1}\n                onDragEnd={(e, { offset, velocity }) => {\n                  const swipe = swipePower(offset.x, velocity.x);\n                  if (swipe < -swipeConfidenceThreshold) {\n                    paginate(1);\n                  } else if (swipe > swipeConfidenceThreshold) {\n                    paginate(-1);\n                  }\n                }}\n                className=\"absolute inset-0 cursor-grab active:cursor-grabbing\"\n              >\n                <div className={`h-full bg-gradient-to-br ${slides[currentIndex].color} flex items-center justify-center relative overflow-hidden`}>\n                  <div className=\"absolute inset-0 opacity-10\">\n                    <div className=\"absolute top-10 left-10 w-32 h-32 bg-primary rounded-full blur-xl\"></div>\n                    <div className=\"absolute bottom-10 right-10 w-40 h-40 bg-accent rounded-full blur-xl\"></div>\n                    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-60 h-60 bg-secondary rounded-full blur-2xl\"></div>\n                  </div>\n                  <div className=\"relative z-10 flex flex-col md:flex-row items-center justify-between w-full h-full p-8 md:p-16\">\n                    <motion.div\n                      className=\"flex-1 text-center md:text-left mb-8 md:mb-0 md:pr-8\"\n                      initial={{ opacity: 0, y: 50 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ delay: 0.2, duration: 0.6 }}\n                    >\n                      <motion.h2\n                        className=\"text-4xl md:text-6xl font-bold text-foreground mb-6 text-balance\"\n                        initial={{ opacity: 0, x: -50 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ delay: 0.3, duration: 0.6 }}\n                      >\n                        {slides[currentIndex].title}\n                      </motion.h2>\n                      <motion.p\n                        className=\"text-lg md:text-xl text-muted-foreground leading-relaxed max-w-lg text-pretty\"\n                        initial={{ opacity: 0, x: -50 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ delay: 0.4, duration: 0.6 }}\n                      >\n                        {slides[currentIndex].description}\n                      </motion.p>\n                    </motion.div>\n                    <motion.div\n                      className=\"flex-1 flex justify-center\"\n                      initial={{ opacity: 0, scale: 0.8 }}\n                      animate={{ opacity: 1, scale: 1 }}\n                      transition={{ delay: 0.1, duration: 0.8 }}\n                    >\n                      <div className=\"relative\">\n                        <img\n                          src={slides[currentIndex].image || \"/placeholder.svg\"}\n                          alt={slides[currentIndex].title}\n                          className=\"w-full max-w-md h-auto rounded-xl shadow-2xl border border-border/20\"\n                        />\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-xl\"></div>\n                      </div>\n                    </motion.div>\n                  </div>\n                </div>\n              </motion.div>\n            </AnimatePresence>\n\n            <motion.button\n              className=\"absolute left-4 top-1/2 transform -translate-y-1/2 z-20 bg-primary/90 hover:bg-primary text-primary-foreground p-3 rounded-full shadow-lg backdrop-blur-sm border border-primary-foreground/20\"\n              onClick={() => paginate(-1)}\n              whileHover={{ scale: 1.1, x: -2 }}\n              whileTap={{ scale: 0.95 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n            >\n              <ChevronLeft size={24} />\n            </motion.button>\n\n            <motion.button\n              className=\"absolute right-4 top-1/2 transform -translate-y-1/2 z-20 bg-primary/90 hover:bg-primary text-primary-foreground p-3 rounded-full shadow-lg backdrop-blur-sm border border-primary-foreground/20\"\n              onClick={() => paginate(1)}\n              whileHover={{ scale: 1.1, x: 2 }}\n              whileTap={{ scale: 0.95 }}\n              transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n            >\n              <ChevronRight size={24} />\n            </motion.button>\n          </div>\n\n          <div className=\"flex justify-center space-x-3 py-6 bg-card/50 backdrop-blur-sm\">\n            {slides.map((_, index) => (\n              <motion.button\n                key={index}\n                className={`w-3 h-3 rounded-full transition-all duration-300 ${index === currentIndex ? \"bg-secondary shadow-lg scale-125\" : \"bg-muted hover:bg-muted-foreground/50\"}`}\n                onClick={() => {\n                  setDirection(index > currentIndex ? 1 : -1);\n                  setCurrentIndex(index);\n                }}\n                whileHover={{ scale: index === currentIndex ? 1.25 : 1.1 }}\n                whileTap={{ scale: 0.9 }}\n              />\n            ))}\n          </div>\n\n          <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-muted\">\n            <motion.div\n              className=\"h-full bg-gradient-to-r from-primary to-accent\"\n              initial={{ width: \"0%\" }}\n              animate={{ width: `${((currentIndex + 1) / slides.length) * 100}%` }}\n              transition={{ duration: 0.5, ease: \"easeInOut\" }}\n            />\n          </div>\n        </div>\n\n        <motion.div\n          className=\"text-center mt-6\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5 }}\n        >\n          <span className=\"text-muted-foreground text-sm font-medium\">\n            {currentIndex + 1} of {slides.length}\n          </span>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n",
  "tags": ["carousel", "slider", "framer-motion", "ui"],
  "dependencies": ["framer-motion", "lucide-react"],
  "imports": [
    "import { useState } from 'react';",
    "import { motion, AnimatePresence } from 'framer-motion';",
    "import { ChevronLeft, ChevronRight } from 'lucide-react';"
  ]
}
  ]
}
